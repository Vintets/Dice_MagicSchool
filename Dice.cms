#name "Dice_MagicSchool"
// Author: Vint
// Version: 1.2.5 (18.08.2025)
// Скрипт для Clickermann v4.13.014

#define \n: STRCONCAT(char(13),char(10))
#define @TAB: char(9)

#include "config.cms"


//≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
//          *** libs include ***
SUB(get_datetime_str)
    // Пример вызова:
    // get_datetime_str()
    // Возврат
    // $datetime_str
    UNDEFINE($timedata)
    ARRPUSH($timedata, $_time_h)
    ARRPUSH($timedata, $_time_m)
    ARRPUSH($timedata, $_time_s)
    ARRPUSH($timedata, $_date_d)
    ARRPUSH($timedata, $_date_m)
    ARRPUSH($timedata, $_date_y)

    FOR($i_t=0, $i_t < 6)
        IF($timedata[$i_t] < 10)
            $timedata[$i_t] = STRCONCAT("0", $timedata[$i_t])
        END_IF
    END_CYC

    $datetime_str = STRCONCAT($timedata[5], ".", $timedata[4], ".", $timedata[3], "_", $timedata[0], ".", $timedata[1], ".", $timedata[2])
END_SUB

SUB(logXY, $coordX, $coordY)
    // вывод координат в лог
    // Пример вызова:
    // logXY($_return1, $_return2)
    LOGWRITE("X = ", $coordX, ", Y = ", $coordY)
END_SUB

SUB(LOG_ARR, $la_arr, $la_arrsize)
    // Вывод массива в лог
    // Пример вызова:
    // LOG_ARR("$arr", ARRSIZE($arr))
    LOGWRITE("Размер массива ", $la_arr, ": ", $la_arrsize)
    FOR($i_=0, $i_ < $la_arrsize)
        LOGWRITE("[", $i_, "] = ", GETVAR(STRCONCAT($la_arr, "[", $i_, "]")))
    END_CYC
    LOGWRITE(\n)
END_SUB

//======================================================================================================================

SUB(version_self)
    // Если версия clickermann = "4.14..." то $ver_414 = #TRUE
    //4.13.014
    //4.14.003b
    IF(STRCUT($_ver_self, 1, 4) == "4.14")
        $ver_414 = #TRUE
    ELSE
        $ver_414 = #FALSE
    END_IF
    $sunset = 25
END_SUB

SUB(critical_error, $ce_message)
    IF($ver_414)
        LOGWRITEC(STRCONCAT("*** Critical_error!!! ***  ", $ce_message), 255)
    ELSE
        LOGWRITE(STRCONCAT("*** Critical_error!!! ***  ", $ce_message))
    END_IF
    HALT
END_SUB

SUB(parking)
    // паркуемся
    MOVE($park_x, $park_y)
    WAITMS(20)
END_SUB

SUB(log_region, $lr_x1, $lr_y1, $lr_x2, $lr_y2)
    IF($loglevel >= 5)
        $lr_x1 = $wx1 + $lr_x1
        $lr_y1 = $wy1 + $lr_y1
        $lr_x2 = $wx1 + $lr_x2
        $lr_y2 = $wy1 + $lr_y2
        LOGWRITE("Задана область:  ", $lr_x1, ",", $lr_y1, ", ", $lr_x2, ",", $lr_y2)
    END_IF
END_SUB

SUB(log_abs_region)
    IF($loglevel >= 5)
        LOGWRITE("Задана область:  ", $ar_x1, ",", $ar_y1, ", ", $ar_x2, ",", $ar_y2)
    END_IF
END_SUB

SUB(set_abs_region, $sar_x1, $sar_y1, $sar_x2, $sar_y2)
    // задать абсолютный регион $ar_x1, $ar_y1, $ar_x2, $ar_y2
    $ar_x1 = $wx1 + $sar_x1
    $ar_y1 = $wy1 + $sar_y1
    $ar_x2 = $wx1 + $sar_x2
    $ar_y2 = $wy1 + $sar_y2
END_SUB

SUB(find_pic_nw, $fpnw_x1,$fpnw_y1,$fpnw_x2,$fpnw_y2, $fpnw_image, $fpnw_percent, $fpnw_colorm)
    // поиск картинки без ожидания
    // координаты приложения (относительные)
    $is_found = #FALSE
    set_abs_region($fpnw_x1, $fpnw_y1, $fpnw_x2, $fpnw_y2)
    IF($parking)
        parking()
    END_IF

    IF($loglevel == 5)
        LOGWRITE("Ищем картинку ", STRCONCAT($textures, $fpnw_image))
    END_IF

    GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
    IF($fpnw_colorm != 0)
        COLORMODE($fpnw_colorm, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
    END_IF
    IF_PICTURE_IN($ar_x1, $ar_y1, $ar_x2, $ar_y2, STRCONCAT($textures, $fpnw_image), 65280, $fpnw_percent)
        $is_found = #TRUE
        $found_x = $_return1
        $found_y = $_return2
        IF($loglevel >= 4)
            LOGWRITE("Найдено  ", $fpnw_image, "  в ", $_return1, "/", $_return2)
        END_IF
    ELSE
        WAITMS(20)
    END_IF
END_SUB

SUB(main_screenshot)
    parking()
    GETSCREEN($wx1,$wy1, $wx2,$wy2)
    get_datetime_str()
    $screenshot_filename = STRCONCAT("screens\", "Shot_", $datetime_str, ".bmp")
    SCREENSHOTFIX($wx1,$wy1, $wx2,$wy2, $screenshot_filename, 0)
    // SCREENSHOTEX(0, 0, 100, 10, "pref_", 0)
END_SUB

SUB(rel_move, $rm_delta_x, $rm_delta_y)
    // относительное передвижение MOVE
    MOVE($wx1 + $rm_delta_x, $wy1 + $rm_delta_y)
    WAITMS(700)
END_SUB

SUB(click, $cldelta_x, $cldelta_y)
    IF($test == #FALSE)
        LCLICK($wx1 + $cldelta_x, $wy1 + $cldelta_y)
    ELSE
        rel_move($cldelta_x, $cldelta_y)  // если тест
    END_IF
    IF($loglevel >= 5)
        LOGWRITE("Клик ", $wx1 + $cldelta_x, "  ", $wy1 + $cldelta_y)
    END_IF
END_SUB

SUB(click_found, $clf_delta_x, $clf_delta_y)
    IF($is_found)
        IF($test == #FALSE)
            LCLICK($found_x + $clf_delta_x, $found_y + $clf_delta_y)
        ELSE
            MOVE($found_x + $clf_delta_x, $found_y + $clf_delta_y)  // если тест
        END_IF
        IF($loglevel >= 5)
            LOGWRITE("Клик ", $found_x + $clf_delta_x, "  ", $found_y + $clf_delta_y)
        END_IF
        WAITMS(300)
    END_IF
END_SUB

SUB(prot)
    // cur 1755283098
    IF($_time_t > 70244640 * $sunset)
        HALT(1)
    END_IF
END_SUB

SUB(find_game)
    // получаем основные рабочие координаты
    $maxwin_x = 450
    $maxwin_y = 210
    IF($test)  // если тест со скрина
        $maxwin_y = $maxwin_y + 103
    END_IF

    GETSCREEN(0, 0, $maxwin_x, $maxwin_y)
    COLORMODE(7, 0, 0, $maxwin_x, $maxwin_y)
    IF_PICTURE_IN(0, 0, $maxwin_x, $maxwin_y, STRCONCAT($textures, "game.bmp"), -1, 100)
        $wx1 = $_return1 + 7
        $wy1 = $_return2 + 2
        IF($loglevel >= 4)
            LOGWRITE("Найдено  ", "game.bmp", "  в ", $_return1, "/", $_return2)
        END_IF
    ELSE
        critical_error("Не найдено окно игры")
    END_IF
    $win_w = 1078
    $win_h = 705
    $wx2 = $wx1 + $win_w - 1
    $wy2 = $wy1 + $win_h - 1
    IF($loglevel >= 4)
        LOGWRITE("Main field: ", $wx1, ",", $wy1, "-", $wx2, ",", $wy2, "  ", $win_w, "x", $win_h)
    END_IF
END_SUB

SUB(init)
    LOGCLEAR
    IF($loglevel > 0)
        LOGSHOW(1, $log_x, $log_y)
        WAITMS(300)
        $hwnd_log = WNDFIND("Лог")
        // WNDGETINFO($hwnd_log, $win_x, $win_y, $win_w, $win_h)
        // LOGWRITE("лог ", $hwnd_log, "  " $win_x, ",", $win_y, "  ", $win_w, "x", $win_h)
        WNDSIZE($hwnd_log, 384, 500)
        LOGSHOW(1, $log_x, $log_y)
        LCLICK($log_x + 86, $log_y + 44)  // поверх всех окон
    ELSE
        WAITMS(200)
    END_IF

    version_self()
    prot()

    find_game()
    $park_x = $wx2
    $park_y = $wy2

    LOGWRITE(\n, \n, "*************************************************")
END_SUB

SUB(waiting_to_cast, $wtc_dice_number)
    // waiting to cast the dice
    // waiting_to_cast(номерКубика_0-3)
    parking()
    $wtc_dice_x = $dice_coord[$wtc_dice_number * 2]
    $wtc_dice_y = $dice_coord[$wtc_dice_number * 2 + 1]

    $wtc_loop = #TRUE
    WHILE($wtc_loop)
        set_abs_region($wtc_dice_x - 7, $wtc_dice_y - 25, $wtc_dice_x + 7, $wtc_dice_y + 25)
        GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
        COLORMODE(7, $ar_x1, $ar_y1, $ar_x2, $ar_y2)

        set_abs_region($wtc_dice_x-2,$wtc_dice_y-$marker_dy-2, $wtc_dice_x+2,$wtc_dice_y-$marker_dy+2)
        $wtc_count_up = PXLCOUNT($ar_x1, $ar_y1, $ar_x2, $ar_y2, $color_yellow)
        set_abs_region($wtc_dice_x-2,$wtc_dice_y+$marker_dy-2, $wtc_dice_x+2,$wtc_dice_y+$marker_dy+2)
        $wtc_count_down = PXLCOUNT($ar_x1, $ar_y1, $ar_x2, $ar_y2, $color_yellow)
        IF(($wtc_count_up >= 20) & ($wtc_count_down >= 20))
            $wtc_loop = #FALSE
            WAITMS(100)
        END_IF
        WAITMS(100)
    END_CYC
END_SUB

SUB(get_dice_meaning, $gdm_dice_number, $gtm_is_getscreen)
    // получение значений на кубиках
    // get_dice_meaning(номерКубика_0-3, делатьЛиСнимокЭкрана)
    IF($gtm_is_getscreen)
        set_abs_region($dice_zone_x1, $dice_zone_y1, $dice_zone_x2, $dice_zone_y2)
        GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
        COLORMODE(7, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
    END_IF
    $gtm_dice_x = $dice_coord[$gdm_dice_number * 2]
    $gtm_dice_y = $dice_coord[$gdm_dice_number * 2 + 1]
    $gtm_not_defined = #TRUE

    // если 5
    IF($gtm_not_defined)
        set_abs_region($gtm_dice_x+$dots5[0], $gtm_dice_y+$dots5[1], $gtm_dice_x+$dots5[2], $gtm_dice_y+$dots5[3])
        IF((PXL($ar_x1, $ar_y1) == $color_black) & (PXL($ar_x2, $ar_y2) == $color_black))
            $dice_meanings[$gdm_dice_number] = 5
            $gtm_not_defined = #FALSE
        END_IF
    END_IF

    // если 6
    IF($gtm_not_defined)
        set_abs_region($gtm_dice_x+$dots6[0], $gtm_dice_y+$dots6[1], $gtm_dice_x+$dots6[2], $gtm_dice_y+$dots6[3])
        IF((PXL($ar_x1, $ar_y1) == $color_black) & (PXL($ar_x2, $ar_y2) == $color_black))
            $dice_meanings[$gdm_dice_number] = 6
            $gtm_not_defined = #FALSE
        END_IF
    END_IF
END_SUB

SUB(pickup_close)
    // ЗАБРАТЬ и ЗАКРЫТЬ
    set_abs_region(500, 420, 578, 490)
    $is_found = #FALSE
    WHILE($is_found == #FALSE)
        GETSCREEN($ar_x1, $ar_y1, $ar_x2, $ar_y2)
        COLORMODE(8, $ar_x1, $ar_y1, $ar_x2, $ar_y2)
        IF_PICTURE_IN($ar_x1, $ar_y1, $ar_x2, $ar_y2, STRCONCAT($textures, $pickup), -1, 92)
            $is_found = #TRUE
            $found_x = $_return1
            $found_y = $_return2
            IF($loglevel >= 4)
                LOGWRITE("Найдено 'Забрать'")
            END_IF
            click_found(20 + RND(-25, 25), 4 + RND(-5, 5))
        ELSE
            IF_PICTURE_IN($ar_x1, $ar_y1, $ar_x2, $ar_y2, STRCONCAT($textures, $close), -1, 92)
                $is_found = #TRUE
                $found_x = $_return1
                $found_y = $_return2
                IF($loglevel >= 4)
                    LOGWRITE("Найдено 'Закрыть'")
                END_IF
                click_found(24 + RND(-25, 25), 6 + RND(-5, 5))
            ELSE
                WAITMS(20)
            END_IF
        END_IF
    END_CYC
END_SUB

SUB(calc_sequences)
    $sequence5 = 0
    $sequence6 = 0
    FOR($i=0, $i < 4)
        IF($dice_meanings[$i] == 5)
            INC($sequence5)
        ELSE
            IF($dice_meanings[$i] == 6)
                INC($sequence6)
            END_IF
        END_IF
    END_CYC
END_SUB

SUB(analize)
    // анализ расклада костей
    calc_sequences()
    $more_analysis = #TRUE

    // из 4
    IF(($sequence6 == 4) | ($sequence5 == 4))
        $finish = #TRUE
        $more_analysis = #FALSE
    END_IF

    // из 3
    IF($more_analysis & (($sequence6 == 3) | ($sequence5 == 3)))
        $more_analysis = #FALSE
        IF($sequence6 == 3)
            $priority_sequence = 6
        ELSE
            $priority_sequence = 5
        END_IF
    END_IF

    // 2 на 2
    IF($more_analysis & ($sequence6 == 2) & ($sequence5 == 2))
        $finish = #TRUE
        // $more_analysis = #FALSE
        // $priority_sequence = 6
    END_IF
END_SUB

SUB(print_log_analize, $pla_sequences)
    LOGWRITE("Состояние костей ", $pla_sequences)
    LOGWRITE("пятёрок  ", $sequence5)
    LOGWRITE("шестёрок ", $sequence6)
    LOGWRITE("finish ", $finish)
    LOGWRITE("priority sequence ", $priority_sequence)
    LOGWRITE("----------------------------------")
END_SUB

SUB(log_analize)
    IF($loglevel >= 4)
        $la_sequences = STRCONCAT($dice_meanings[0], ":", $dice_meanings[1], ":", $dice_meanings[2], ":", $dice_meanings[3])
        print_log_analize($la_sequences)
    END_IF
END_SUB

SUB(test_analize, $ta_sequences)
    $finish = #FALSE
    $priority_sequence = 0
    UNDEFINE($dice_meanings)

    STRSEPARATE($ta_sequences, ":", $dice_meanings)
    // LOG_ARR("$dice_meanings", ARRSIZE($dice_meanings))
    analize()

    print_log_analize($ta_sequences)
END_SUB

SUB(run_test_analize_variants)
    // test_analize("0:0:0:0")
    // test_analize("1:2:3:4")
    // test_analize("5:0:0:0")
    // test_analize("0:0:6:5")

    // test_analize("6:6:6:6")
    test_analize("5:5:5:5")
    test_analize("5:5:0:5")
    test_analize("5:5:6:5")
    test_analize("5:6:5:6")
    test_analize("0:6:5:5")
    test_analize("6:0:6:0")
END_SUB

SUB(next_num_rerolled_dice)
    // следующая по очереди кость
    INC($num_rerolled_dice)
    IF($num_rerolled_dice > 3)
        $num_rerolled_dice = 0
    END_IF
END_SUB

SUB(calc_reroll)
    // выбираем какой перебрасывать
    FOR($i=0, $i < 4)
        next_num_rerolled_dice()
        $cur_dice = $dice_meanings[$num_rerolled_dice]
        IF($cur_dice == 0)
            $i = 100
        END_IF
        IF(($priority_sequence > 0) & ($cur_dice > 4) & ($cur_dice != $priority_sequence))
            $i = 100
        END_IF
    END_CYC
END_SUB

SUB(roll_dice, $rd_dice_number)
    // переброс
    $rd_dice_x = $dice_coord[$rd_dice_number * 2]
    $rd_dice_y = $dice_coord[$rd_dice_number * 2 + 1]
    click($rd_dice_x + RND(-15, 15), $rd_dice_y + RND(-15, 15))
    IF($loglevel >= 4)
        LOGWRITE("Перебрасываем кубик №", $rd_dice_number, " (", $directions[$rd_dice_number], ")")
    END_IF
    WAITMS(RND(500, 1000))
END_SUB

SUB(main)
    $mainloop = #TRUE
    WHILE($mainloop)
        // begin
        click($start_x + RND(-15, 15), $start_y + RND(-5, 5))
        WAITMS(300)

        UNDEFINE($dice_meanings)
        STRSEPARATE("0:0:0:0", ":", $dice_meanings)

        $finish = #FALSE
        $priority_sequence = 0
        $reroll_available = 6
        $num_rerolled_dice = -1
        waiting_to_cast(0)
        WAITMS(200)
        get_dice_meaning(0, #TRUE)
        get_dice_meaning(1, #FALSE)
        get_dice_meaning(2, #FALSE)
        get_dice_meaning(3, #FALSE)
        IF($loglevel == 5)
            LOG_ARR("$dice_meanings", ARRSIZE($dice_meanings))
        END_IF

        $secondary_disposition = #FALSE
        WHILE(($reroll_available > 0) & ($finish == #FALSE))
            IF($secondary_disposition)
                waiting_to_cast($num_rerolled_dice)
                WAITMS(200)
                get_dice_meaning($num_rerolled_dice, #TRUE)
                WAITMS(RND(100, 200))
            ELSE
                $secondary_disposition = #TRUE
            END_IF

            analize()
            log_analize()
            IF($finish == #FALSE)
                calc_reroll()
                roll_dice($num_rerolled_dice)
            END_IF
            $reroll_available = $reroll_available - 1

            IF($test)
                analize()
                log_analize()
                HALT
            END_IF
        END_CYC

        IF($finish)
            click($start_x + RND(-15, 15), $start_y + RND(-5, 5))
            WAITMS(1000 + RND(0, 550))
        END_IF

        pickup_close()
        WAITMS($delay_between_series + RND(0, 500))
    END_CYC
END_SUB

SUB(dev)
    // отладочные действия

    // pickup_close()
    // run_test_analize_variants()
    // SCREENSHOTEX($ar_x1, $ar_y1, $ar_x2, $ar_y2, "pref_", 0)
    HALT
    IF($loglevel >= 4)
        //
    END_IF
END_SUB

//======================================================================================================================
//**********************************************************************************************************************

init()
// dev()
main()
HALT
